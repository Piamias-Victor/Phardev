name: CI/CD Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-and-push-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Create .env file
        run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "ENV=PROD" >> .env


      # Se connecter Ã  GHCR
      - name: Authenticate with GitHub Container Registry
        run: echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # Construire l'image Docker
      - name: Build Docker image
        run: |
          docker build -t ghcr.io/mysteriousbaboon/${{ github.repository }}:latest .

      # Pousser l'image sur GHCR
      - name: Push Docker image to GHCR
        run: |
          docker push ghcr.io/mysteriousbaboon/${{ github.repository }}:latest



  deploy-to-ec2:
    name: Deploy to EC2
    needs: build-and-push-image
    runs-on: self-hosted
    steps:
      # Checkout repository to get docker-compose.yml
      - name: Checkout code
        uses: actions/checkout@v4

      # Create .env file for Docker Compose
      - name: Create .env file for Docker Compose
        run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "ENV=PROD" >> .env

      - name: docker compose down
        run: docker compose down

      - name: Remove existing container
        run: docker container prune -f

      - name: Clean up the Docker environment
        run: docker system prune -f

      - name: Enable memory overcommit
        run: |
          sudo sysctl vm.overcommit_memory=1

      - name: Authenticate with GitHub Container Registry
        run: echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Run docker compose
        run: docker compose up -d --force-recreate --pull always